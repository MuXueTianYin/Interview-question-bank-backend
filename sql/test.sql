-- 初始数据
use interview_question;

-- 用户表初始数据（密码是 12345678）
insert into interview_question.user (id, userAccount, userPassword, unionId, mpOpenId, userName, userAvatar, userProfile, userRole, editTime, createTime, updateTime, isDelete)
values  (0, 'muxue', '9be16514dd58e5e7575a0c23231048f6', null, null, '暮雪', 'https://i.postimg.cc/NffrxL8V/artbreeder-image-2024-07-02-T06-25-39-367-Z.jpg', '上班族（社畜）', 'admin', '2024-11-06 15:17:23', '2024-11-06 15:17:23', '2024-11-25 15:50:20', 0),
        (1, 'user1', '9be16514dd58e5e7575a0c23231048f6', 'unionId1', 'mpOpenId1', 'user1', 'https://muxuetianyin-1320887577.cos.ap-guangzhou.myqcloud.com/user_avatar/1806236201047695362/ck9NLVt0-artbreeder-image-2024-07-02T06_31_01.610Z.jpeg', '喜欢编程的小白', 'user', '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (2, 'user2', '9be16514dd58e5e7575a0c23231048f6', 'unionId2', 'mpOpenId2', 'user2', 'https://muxuetianyin-1320887577.cos.ap-guangzhou.myqcloud.com/user_avatar/1806236201047695362/ck9NLVt0-artbreeder-image-2024-07-02T06_31_01.610Z.jpeg', '全栈开发工程师', 'user', '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (3, 'user3', '9be16514dd58e5e7575a0c23231048f6', 'unionId3', 'mpOpenId3', 'user3', 'https://muxuetianyin-1320887577.cos.ap-guangzhou.myqcloud.com/user_avatar/1806236201047695362/ck9NLVt0-artbreeder-image-2024-07-02T06_31_01.610Z.jpeg', '前端爱好者', 'user', '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (4, 'user4', '9be16514dd58e5e7575a0c23231048f6', 'unionId4', 'mpOpenId4', 'user4', 'https://muxuetianyin-1320887577.cos.ap-guangzhou.myqcloud.com/user_avatar/1806236201047695362/ck9NLVt0-artbreeder-image-2024-07-02T06_31_01.610Z.jpeg', '后端开发工程师', 'user', '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (5, 'muxuetianyin', '9be16514dd58e5e7575a0c23231048f6', null, null, '苏永儿', 'https://muxuetianyin-1320887577.cos.ap-guangzhou.myqcloud.com/user_avatar/1806236201047695362/ck9NLVt0-artbreeder-image-2024-07-02T06_31_01.610Z.jpeg    ', '系统管理员', 'admin', '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),

-- 题库表初始数据
insert into interview_question.question_bank (id, title, description, picture, userId, editTime, createTime, updateTime, isDelete)
values  (1, 'java基础', null, null, 1, '2024-11-07 11:00:30', '2024-11-07 11:00:30', '2024-11-07 11:00:30', 0),
        (2, 'python', null, null, 1, '2024-11-07 11:00:44', '2024-11-07 11:00:44', '2024-11-07 11:00:44', 0),
        (3, 'JavaScript 基础', '包含 JavaScript 的基础知识题目', 'https://pic.code-nav.cn/mianshiya/question_bank_picture/1777886594896760834/JldkWf9w_JavaScript.png', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (4, 'CSS 样式', '包含 CSS 相关的样式问题', 'https://pic.code-nav.cn/mianshiya/question_bank_picture/1777886594896760834/QatnFmEN_CSS.png', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (5, 'HTML 基础', 'HTML 标记语言的基本知识', 'https://www.mianshiya.com/logo.png', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (6, '前端框架', 'React, Vue, Angular 等框架相关的题目', 'https://www.mianshiya.com/logo.png', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (7, '算法与数据结构', '数据结构和算法题目', 'https://www.mianshiya.com/logo.png', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (8, '数据库原理', 'SQL 语句和数据库设计', 'https://www.mianshiya.com/logo.png', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (9, '操作系统', '操作系统的基本概念', 'https://www.mianshiya.com/logo.png', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (10, '网络协议', 'HTTP, TCP/IP 等网络协议题目', 'https://www.mianshiya.com/logo.png', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (11, '设计模式', '常见设计模式及其应用', 'https://www.mianshiya.com/logo.png', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (12, '编程语言概述', '多种编程语言的基础知识', 'https://www.mianshiya.com/logo.png', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (13, '版本控制', 'Git 和 SVN 的使用', 'https://www.mianshiya.com/logo.png', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (14, '安全与加密', '网络安全和加密技术', 'https://www.mianshiya.com/logo.png', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (15, '云计算', '云服务和架构', 'https://www.mianshiya.com/logo.png', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (16, '微服务架构', '微服务的设计与实现', 'https://www.mianshiya.com/logo.png', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (17, '容器技术', 'Docker 和 Kubernetes 相关知识', 'https://www.mianshiya.com/logo.png', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (18, 'DevOps 实践', '持续集成与持续交付', 'https://www.mianshiya.com/logo.png', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (19, '数据分析', '数据分析和可视化', 'https://www.mianshiya.com/logo.png', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (20, '人工智能', '机器学习与深度学习基础', 'https://www.mianshiya.com/logo.png', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (21, '区块链技术', '区块链的基本原理和应用', 'https://www.mianshiya.com/logo.png', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (22, '项目管理', '软件开发项目的管理和执行', 'https://www.mianshiya.com/logo.png', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1866383109413834753, 'vue2', 'vue2基本面试题', null, 0, '2024-12-10 15:23:03', '2024-12-10 15:23:03', '2024-12-10 15:23:03', 0);

-- 题目表初始数据
insert into interview_question.question (id, title, content, tags, answer, userId, editTime, createTime, updateTime, isDelete)
values  (1, '什么是 Java 中的双亲委派模型？ ', ' 类加载器尝试加载一个类时，首先请求它的父类加载器，如果父类加载器加载过则直接返回加载过的Class对象，如果没有加载过则再向上请求，一直到启动类加载器。然后再由启动类加载器从上到下，依次尝试加载好处： 1. 防止一个类重复加载。2. 避免核心类库被破坏。', '["java","java基础"]', '双亲委派模型是 Java 类加载机制的设计模式之一。它的核心思想是：类加载器在加载某个类时，会先委派给父类加载器去加载，父类加载器无法加载时，才由当前类加载器自行加载。', 1, '2024-11-06 15:52:50', '2024-11-06 15:52:50', '2024-12-05 14:03:22', 0),
        (2, 'Java 中 wait() 和 sleep() 的区别？ ', '在 Java 中，wait() 和 sleep() 都可以用来让线程暂停一段时间,但它们之间有几个关键的区别', '["java","java基础"]', 'sleep方法 属于Thread类中的方法 释放cpu给其它线程 不释放锁资源 sleep(1000) 等待超过1s被唤wait方法 属于Object类中的方法 释放cpu给其它线程，同时释放锁资源 wait(1000) 等待超过1s被唤醒 wait() 一直等待需要通过notify或者notifyAll进行唤醒 wait 方法必须配合 synchronized 一起使用，不然在运行时就会抛出IllegalMonitorStateException异常', 1, '2024-11-06 16:12:04', '2024-11-06 16:12:04', '2024-12-05 14:03:22', 0),
        (3, 'JavaScript 变量提升', '请解释 JavaScript 中的变量提升现象。', '["JavaScript", "基础"]', '变量提升是指在 JavaScript 中，变量声明会被提升到作用域的顶部。', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-12-05 14:03:22', 0),
        (4, 'HTML 中的语义化', '什么是 HTML 的语义化？为什么重要？', '["HTML", "语义化"]', 'HTML 语义化是使用正确的标签来描述内容的意义，能够提高可访问性和 SEO 效果。', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-12-05 14:04:55', 0),
        (5, '数据库索引的作用', '什么是数据库索引？它的作用是什么？', '["数据库", "索引"]', '数据库索引是用于加快查询速度的数据结构，它通过优化查找路径减少查询时间。', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-12-05 14:04:55', 0),
        (6, 'JavaScript 闭包的应用', '什么是闭包？举例说明闭包的实际应用。', '["JavaScript", "高级"]', '闭包是指函数能够记住创建时的上下文环境，常用于数据隐藏和模块化编程。', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-12-05 14:04:55', 0),
        (7, '前端性能优化', '列举几个前端性能优化的手段。', '["前端", "性能优化"]', '包括代码分割、资源压缩、缓存策略、懒加载等。', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-12-05 14:04:55', 0),
        (8, 'CSS 的 BEM 命名规范', '什么是 BEM？如何使用 BEM 进行 CSS 命名？', '["CSS", "命名规范"]', 'BEM 代表块（Block）、元素（Element）和修饰符（Modifier），是一种 CSS 命名规范。', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-12-05 14:04:55', 0),
        (9, '前端工程化的意义', '为什么需要前端工程化？', '["前端", "工程化"]', '前端工程化能够提高开发效率、代码质量和可维护性，规范开发流程。', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-12-05 14:04:55', 0),
        (1854074258551410692, 'CSS Flexbox 布局', '如何使用 CSS 实现一个水平居中的盒子？', '["CSS", "布局"]', '可以使用 Flexbox 布局，通过设置父容器 display 为 flex，并使用 justify-content: center; 对齐子元素。', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410694, 'React 中的状态管理', '如何在 React 中管理组件状态？', '["React", "状态管理"]', '可以使用 React 的 useState 或 useReducer 钩子来管理组件状态，或使用 Redux 进行全局状态管理。', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410695, '算法：二分查找', '请实现一个二分查找算法。', '["算法", "数据结构"]', '二分查找是一种在有序数组中查找特定元素的算法，通过不断折半的方式缩小查找范围。', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410697, 'HTTP 与 HTTPS 的区别', '请解释 HTTP 和 HTTPS 之间的主要区别。', '["网络", "协议"]', 'HTTPS 是加密的 HTTP，通过 SSL/TLS 提供更安全的数据传输。', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410698, '设计模式：单例模式', '请解释单例模式的实现及应用场景。', '["设计模式", "单例"]', '单例模式确保一个类只有一个实例，并提供全局访问点。常用于配置类等只需一个实例的场景。', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410699, 'Git 中的分支管理', '如何在 Git 中管理分支？', '["版本控制", "Git"]', 'Git 中通过 branch 命令创建分支，使用 checkout 切换分支，使用 merge 合并分支。', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410700, 'Docker 的基本命令', '列举并解释几个常用的 Docker 命令。', '["容器技术", "Docker"]', '常用命令包括 docker run, docker build, docker ps, docker stop 等。', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410703, '数据库事务的特性', '请解释数据库事务的 ACID 特性。', '["数据库", "事务"]', 'ACID 代表原子性、一致性、隔离性和持久性，是事务处理的四大特性。', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410705, 'JavaScript 原型链', '请解释 JavaScript 中的原型链机制。', '["JavaScript", "原型链"]', '原型链是 JavaScript 实现继承的机制，对象通过原型链可以继承其他对象的属性和方法。', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410706, 'React 生命周期', '请说明 React 组件的生命周期方法。', '["React", "生命周期"]', 'React 组件的生命周期包括初始化、更新和卸载三个阶段，各阶段有不同的生命周期方法。', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410707, 'HTTP 状态码 404 与 500 的区别', '请解释 HTTP 状态码 404 和 500 的含义。', '["网络", "HTTP"]', '404 表示未找到资源，500 表示服务器内部错误。', 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410708, 'Python 与 Java 的区别', '比较 Python 和 Java 的主要区别。', '["编程语言", "Python", "Java"]', 'Python 是动态类型语言，语法简洁，而 Java 是静态类型语言，注重严谨性和性能。', 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0),
        (1854074258551410709, 'Vue 的双向数据绑定', '请解释 Vue.js 是如何实现双向数据绑定的。', '["Vue", "数据绑定"]', 'Vue.js 通过数据劫持和发布-订阅模式实现了双向数据绑定。', 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21', '2024-11-25 14:00:21', 0);

-- 题库题目关联初始数据
INSinsert into interview_question.question_bank_question (id, questionBankId, questionId, userId, createTime, updateTime)
values  (1, 1, 1854069415854149634, 1, '2024-11-07 10:59:45', '2024-11-07 10:59:45'),
        (2, 1, 1854074258551410690, 1, '2024-11-07 10:59:45', '2024-11-07 16:22:08'),
        (4, 1, 1, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (5, 1, 2, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (6, 1, 3, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (13, 1, 10, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (15, 2, 14, 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (16, 3, 3, 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (17, 3, 13, 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (19, 4, 16, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (21, 5, 18, 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (23, 6, 19, 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (25, 7, 11, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (27, 8, 10, 2, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (29, 9, 17, 3, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (30, 10, 12, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (31, 10, 20, 1, '2024-11-25 14:00:21', '2024-11-25 14:00:21'),
        (1866380611219263489, 8, 5, 0, '2024-12-10 15:13:08', '2024-12-10 15:13:08'),
        (1866380731037945858, 10, 1854074258551410707, 0, '2024-12-10 15:13:36', '2024-12-10 15:13:36'),
        (1866380760360325122, 6, 1854074258551410706, 0, '2024-12-10 15:13:43', '2024-12-10 15:13:43'),
        (1866380801686802433, 3, 1854074258551410705, 0, '2024-12-10 15:13:53', '2024-12-10 15:13:53'),
        (1866380840282787842, 8, 1854074258551410703, 0, '2024-12-10 15:14:02', '2024-12-10 15:14:02'),
        (1866380909232951297, 17, 1854074258551410700, 0, '2024-12-10 15:14:19', '2024-12-10 15:14:19'),
        (1866380980729057281, 13, 1854074258551410699, 0, '2024-12-10 15:14:36', '2024-12-10 15:14:36'),
        (1866381046437023746, 11, 1854074258551410698, 0, '2024-12-10 15:14:51', '2024-12-10 15:14:51'),
        (1866381120529403906, 10, 1854074258551410697, 0, '2024-12-10 15:15:09', '2024-12-10 15:15:09'),
        (1866381149285552129, 7, 1854074258551410695, 0, '2024-12-10 15:15:16', '2024-12-10 15:15:16'),
        (1866381240314531842, 6, 1854074258551410694, 0, '2024-12-10 15:15:38', '2024-12-10 15:15:38'),
        (1866381264905736193, 4, 1854074258551410692, 0, '2024-12-10 15:15:43', '2024-12-10 15:15:43'),
        (1866381376038014977, 6, 9, 0, '2024-12-10 15:16:10', '2024-12-10 15:16:10'),
        (1866381416609517569, 4, 8, 0, '2024-12-10 15:16:20', '2024-12-10 15:16:20'),
        (1866381504455020546, 6, 7, 0, '2024-12-10 15:16:41', '2024-12-10 15:16:41'),
        (1866381514693316609, 3, 7, 0, '2024-12-10 15:16:43', '2024-12-10 15:16:43'),
        (1866381560012771330, 3, 6, 0, '2024-12-10 15:16:54', '2024-12-10 15:16:54'),
        (1866381572385968129, 6, 6, 0, '2024-12-10 15:16:57', '2024-12-10 15:16:57'),
        (1866381623455813633, 5, 4, 0, '2024-12-10 15:17:09', '2024-12-10 15:17:09'),
        (1866381758797615105, 2, 1854074258551410708, 0, '2024-12-10 15:17:41', '2024-12-10 15:17:41'),
        (1866381764346679297, 1, 1854074258551410708, 0, '2024-12-10 15:17:42', '2024-12-10 15:17:42'),
        (1866381793115410434, 6, 1854074258551410709, 0, '2024-12-10 15:17:49', '2024-12-10 15:17:49');